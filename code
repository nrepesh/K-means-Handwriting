import codecademylib3_seaborn
import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets 
from sklearn.cluster import KMeans

digits = datasets.load_digits()
#Each list contains 64 values which respent the pixel colors of an image 0 is white and 16 is black 
#print(digits.data) 
#print(digits.target)

'''
plt.gray()
plt.matshow(digits.images[100])
plt.show()
print(digits.target[100])
'''

#10 digits so 10 clusters
model = KMeans(n_clusters=10, random_state=42)
model.fit(digits.data)

fig = plt.figure(figsize=(8,3))
fig.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')

for i in range(10):

  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)

  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)
  
plt.show()

#get handwriting input from test.html
new_samples = np.array([
[0.00,0.00,1.30,4.58,4.57,4.19,0.46,0.00,0.00,0.46,7.17,7.24,6.18,7.62,3.05,0.00,0.00,0.23,4.35,1.30,1.30,7.62,3.05,0.00,0.00,0.00,0.00,0.00,5.18,7.40,0.92,0.00,0.00,0.00,0.00,1.15,7.63,4.58,0.00,0.00,0.00,0.00,0.00,3.66,7.62,1.22,0.00,0.00,0.00,0.00,1.45,6.94,7.32,3.81,3.74,0.38,0.00,0.00,5.11,7.40,6.86,6.86,6.79,0.99],
[0.00,0.00,2.67,7.63,7.63,5.19,0.08,0.00,0.00,0.00,5.95,6.71,4.65,7.62,3.66,0.00,0.00,0.38,7.63,4.27,0.00,6.18,5.95,0.00,0.00,1.53,7.62,2.29,0.00,4.57,6.10,0.00,0.00,1.52,7.62,1.52,0.00,5.57,5.87,0.00,0.00,1.52,7.62,2.21,0.00,6.25,4.96,0.00,0.00,0.99,7.40,7.62,5.72,7.55,4.04,0.00,0.00,0.00,0.99,4.73,6.71,6.41,0.92,0.00],
[0.00,1.83,7.40,7.62,7.62,7.17,0.61,0.00,0.00,2.98,6.41,1.53,3.05,7.62,1.53,0.00,0.00,0.00,0.00,0.08,5.49,7.55,0.61,0.00,0.00,0.00,0.00,4.50,7.62,3.74,0.00,0.00,0.00,0.00,1.91,7.62,4.88,0.08,0.00,0.00,0.00,0.00,2.67,7.62,0.84,0.00,0.00,0.00,0.00,0.00,5.34,7.55,0.76,2.21,1.83,0.00,0.00,1.30,7.62,7.62,7.62,7.62,7.40,0.00],
[0.00,0.00,2.75,7.39,7.63,7.62,3.28,0.00,0.00,1.22,7.47,6.25,1.83,6.33,6.18,0.00,0.00,3.36,7.62,1.22,0.00,3.66,7.62,0.69,0.00,3.81,7.09,0.00,0.00,2.29,7.62,0.76,0.00,3.81,6.86,0.00,0.00,2.29,7.62,0.76,0.00,3.74,7.55,2.14,0.00,4.50,7.63,0.53,0.00,0.76,6.48,7.47,6.10,7.55,5.26,0.00,0.00,0.00,0.68,4.35,4.57,4.50,0.69,0.00]
])

new_labels=model.predict(new_samples)
print(new_labels)

# map out each label with digits we think it represents
for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')
